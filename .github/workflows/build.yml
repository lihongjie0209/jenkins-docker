# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

  pull_request:
    branches: [ master ]

  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: setup-docker
      uses: docker-practice/actions-setup-docker@0.0.1

    # Runs a single command using the runners shell
    - name: Build and push Docker images
      uses: docker/build-push-action@v1.1.0
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: lihongjie0209
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{secrets.PASSWORD }}

        # Docker repository to tag the image with
        repository: jenkins-docker
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        tags: lastest
        # Automatically tags the built image with the git reference as per the readme
        tag_with_ref: true
        # Automatically tags the built image with the git short SHA as per the readme
        tag_with_sha: true
        # Path to the build context

        # Path to the Dockerfile (Default is '{path}/Dockerfile')
        dockerfile: Dockerfile.yml

        # Always attempt to pull a newer version of the image
        always_pull: true

        # Whether to push the image
        push: true
